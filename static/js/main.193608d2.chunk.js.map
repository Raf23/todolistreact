{"version":3,"sources":["Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","state","element","items","onChange","event","setState","target","name","value","onSubmit","preventDefault","deleteItem","index","arr","splice","displayTodo","map","item","className","style","cursor","float","color","onClick","Fragment","this","htmlFor","type","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAgEeA,E,4MA7DXC,MAAQ,CACJC,QAAS,GACTC,MAAO,I,EAGXC,SAAW,SAACC,GACR,EAAKC,SAAL,eACKD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,S,EAI1CC,SAAW,SAACL,GACRA,EAAMM,iBACN,EAAKL,SAAS,CACVJ,QAAS,GACTC,MAAM,GAAD,mBAAM,EAAKF,MAAME,OAAjB,CAAwB,CAACD,QAAS,EAAKD,MAAMC,c,EAI1DU,WAAa,SAACC,GACV,IAAMC,EAAM,EAAKb,MAAME,MACvBW,EAAIC,OAAOF,EAAM,GACjB,EAAKP,SAAS,CACVH,MAAOW,K,EAGfE,YAAc,WACV,OAAO,EAAKf,MAAME,MAAMc,KAAI,SAACC,EAAML,GAC/B,OACI,qBAAKM,UAAU,YAAf,SACI,qBAAKA,UAAU,YAAf,SACI,+BAAKD,EAAKhB,QACN,mBAAGiB,UAAU,eAAeC,MAAO,CAACC,OAAQ,UAAWC,MAAO,QAASC,MAAO,OAAQC,QAAS,kBAAM,EAAKZ,WAAWC,YAHjGA,O,uDAYxC,OACI,eAAC,IAAMY,SAAP,WACI,sBAAKN,UAAU,YAAf,UACI,qBAAKA,UAAU,cAAf,wBACA,qBAAKA,UAAU,YAAf,SACI,uBAAMT,SAAUgB,KAAKhB,SAArB,UACI,sBAAKS,UAAU,aAAf,UACI,uBAAOQ,QAAQ,UAAf,8BACA,uBAAOC,KAAK,OAAOT,UAAU,+BAA+BX,KAAK,UAC1DJ,SAAUsB,KAAKtB,SAAUK,MAAOiB,KAAKzB,MAAMC,aAEtD,wBAAQiB,UAAU,4BAAlB,kDAIXO,KAAKV,qB,GAzDHa,aCUJC,MARf,WACE,OACE,qBAAKX,UAAU,YAAf,SACI,cAAC,EAAD,OCKOY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.193608d2.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Todo extends Component {\r\n    state = {\r\n        element: '',\r\n        items: []\r\n    }\r\n\r\n    onChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n        //console.log(this.state.element)\r\n    }\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            element: '',\r\n            items: [...this.state.items, {element: this.state.element}]\r\n        })\r\n    }\r\n\r\n    deleteItem = (index) => {\r\n        const arr = this.state.items;\r\n        arr.splice(index,1);\r\n        this.setState({\r\n            items: arr\r\n        })\r\n    }\r\n    displayTodo = () => {\r\n        return this.state.items.map((item, index) => {\r\n            return (\r\n                <div className=\"card mb-3\" key={index}>\r\n                    <div className=\"card-body\">\r\n                        <h4>{item.element}\r\n                            <i className=\"fas fa-times\" style={{cursor: 'pointer', float: 'right', color: 'red'}} onClick={() => this.deleteItem(index)}></i>\r\n                        </h4>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"card my-3\">\r\n                    <div className=\"card-header\">To-Do List</div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"element\">Chose à faire</label>\r\n                                <input type=\"test\" className=\"form-control form-control-lg\" name=\"element\"\r\n                                       onChange={this.onChange} value={this.state.element}/>\r\n                            </div>\r\n                            <button className=\"btn btn-primary btn-block\">Ajouter une chose à faire</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                {this.displayTodo()}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default Todo;\r\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Todo from './Todo'\n\nfunction App() {\n  return (\n    <div className=\"container\">\n        <Todo/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}